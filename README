Zopfli Compression Algorithm is a compression library programmed in C to perform
very good, but slow, deflate or zlib compression.

The basic function to compress data is ZopfliCompress in zopfli.h. Use the
ZopfliOptions object to set parameters that affect the speed and compression.
Use the ZopfliInitOptions function to place the default values in the
ZopfliOptions first.

ZopfliCompress supports deflate, gzip and zlib output format with a parameter.
To support only one individual format, you can instead use ZopfliDeflate in
deflate.h, ZopfliZlibCompress in zlib_container.h or ZopfliGzipCompress in
gzip_container.h.

ZopfliDeflate creates a valid deflate stream in memory, see:
http://www.ietf.org/rfc/rfc1951.txt
ZopfliZlibCompress creates a valid zlib stream in memory, see:
http://www.ietf.org/rfc/rfc1950.txt
ZopfliGzipCompress creates a valid gzip stream in memory, see:
http://www.ietf.org/rfc/rfc1952.txt

This library can only compress, not decompress. Existing zlib or deflate
libraries can decompress the data.

zopfli_bin.c is separate from the library and contains an example program to
create very well compressed gzip files. Currently the makefile builds this
program with the library statically linked in.

To build the binary, use "make". To build the library as a shared Linux library,
use "make libzopfli". The source code of Zopfli is under src/zopfli.

Zopfli Compression Algorithm was created by Lode Vandevenne and Jyrki
Alakuijala, based on an algorithm by Jyrki Alakuijala.

Mr_KrzYch00's KrzYmod v8:
- adds 9 command line switches for zopfli:
* --mbs#: maximum block splits, 0 = unlimited (default 15),
* --mls#: maximum length for score (default 1024),
* --mui#: maximum unsuccessful iterations after best, 0 = unlimited/--i limited (default 0),
* --lazy: enable lazy matching in LZ77 Greedy (default OFF),
* --ohh: optymize huffman header (default OFF) [by Frédéric Kayser],
* --gzipname: output to gzip format with filename,
* --zip: output to zip format,
* --dir: read directory recursively instead of file and add all files inside to ZIP archive.
         ZIP file is updated on-fly on every compressed file, so You can always break (CTRL+C)
         the operation, delete manually already compressed files in dir and zipmix two results
         together. THIS FEATURE IS HIGHLY EXPERIMENTAL. As I program in C since like
         2 weeks, my code may not be perfect, but as far as I tested it's a working code.
         Empty directories are NOT compressed,
* -w: displays current processed iteration (same line).
- faster compression but very increased memory usage by altering few preprocessor directives,
- added zopfliavx, zopflipngavx, zopflineon and zopflipngneon to makefile for AVX and NEON builds.

mbs and mls switches are used for finetuning and it's clear they provide
better result sometimes... sometimes worse.

If You enjoy these changes You may give me a small reward in Bitcoins to:
1KrzY1CwE532e6YjN4aCzgV19gtAzQMatJ ;)